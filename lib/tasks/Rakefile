Dir.glob('*.rake').each { |r| import r }

# namespace :setup do
#   desc "Initiate setup. This task serves as a dependency for other tasks."
#   task :init do
#     print "Name of the destination directory: "
#     name = STDIN.gets.strip
#     if pwd().split('/').last == "Rake"
#       puts "Copying the files to #{name}/lib/tasks."
#       cp_r '.', "../#{name}/lib/tasks", verbose: false
#
#       print "Do you want to continue with the setup?(y/n): "
#       option = STDIN.gets.strip
#
#       case option
#       when /[^Yy]/
#         abort_message
#       end
#       cd "../#{name}"
#     end
#   end
#
#   def abort_message
#     abort("Exiting. you can each task individually. See rake -T for more info")
#   end
#
#   desc "Cleanup Gemfile and other stuff."
#   task :cleanup => :init do
#     print "Clean up the standard Gemfile for a new one?(y/n): "
#     option  = STDIN.gets.strip
#
#     case option
#     when /[^Yy]/
#       abort_message
#     end
#
#     puts "Setting a new Gemfile."
#     cp 'lib/tasks/Gemfile', '.', verbose: false
#
#     puts "Running bundle install. This may take a while...\n\n"
#     sh "bundle install"
#   end
#
#   desc "Git tasks"
#   task :git => :init do
#     print "Create a new GIT repository?(y/n): "
#     option = STDIN.gets.strip
#
#     case option
#     when /[^Yy]/
#       abort_message
#     end
#
#     sh 'git init'
#     puts "Adding a few items to .gitignore."
#     puts pwd
#     cp 'lib/tasks/.gitignore', '.', verbose: false
#
#     puts "Setting up git"
#     sh 'git add .'
#     sh 'git commit -m "Init" '
#
#     puts "Enter the link to your repository for this app."
#     repo = STDIN.gets.strip
#     sh "git remote add origin #{repo}"
#     sh 'git push -u origin master'
#   end
#
#   desc "Create a git branch"
#   task :git_branch => :git do
#     puts "Creating a git branch, just to be safe!"
#     sh 'git checkout -b Pre-development'
#   end
#
#   desc "Run all setup tasks"
#   task :all => [:init, :cleanup, :git, :git_branch] do
#     puts "Done"
#   end
# end
